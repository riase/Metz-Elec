<?xml version="1.0" encoding="ISO-8859-1" ?>
<project name="taggerArchi" default="make" basedir="..">


  <!-- Ajout d'un package pour utiliser le task IF -->
  <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

  <!--
   *********************************************************************
    Ce sript permet de mettre un label ("tag") sur les sources de l'archi dans CVS
    Ceci comprend :
       - les sources des packages communs (java + web)
       - les sources des habilitations (java +web)
       - les sources des editions (java +web)
       - les openTools (map4j)
       - les taglibs
       - le fichier de déploiement web.xml
       - les fichiers SQL de création des tables, séquences, etc. de l'archi.

   Avant de tagger une mise à jour de la copie locale est faite (par un nouveau checkout)

   Ce script attend en paramètre :

   OBLIGATOIRES
     cvs.branche		: nom de la branche à tagger, TRONC si c'est le tronc.
     cvs.tag				: nom du tag à mettre sur les sources

   FACULTATIFS

     cvs.login			: nom du user pour la connexion à CVS. Par défaut ce paramètre vaut adminARCHI
     cvs.server 		: nom du serveur sur lequel se trouve la base CVS. Par défaut hermescvs
     cvs.repo			: nom du repository CVS. Par défaut DEV
   Ces trois paramètres peuvent être remplacé par un paramètre global (cvs.root=:pserver:${cvs.login}@${cvs.server}:${cvs.repo})

     etape 				: etape de démmarrage du script. Pas de valeur par défaut (=> 1)

   Avant de lancer le script fixer les paramètres d'environnement.

   La chaîne de lancement est par exemple :

   set JAVA_HOME=D:\java\softs\jdk1.3.1_03
   set ANT_HOME=D:\java\softs\ant\apache-ant-1.5.3-1
   set PATH=%PATH%;%ANT_HOME%\bin;%JAVA_HOME%\bin

   ant -f taggerArchi.xml -Dcvs.tag=Livraison_25072003 -Dcvs.branche=DEV_3_0
     [ -Dcvs.login=mrabti_s -Dcvs.serveur=lausanne -Dcvs.repo=INT -Detape=2 ]

   *********************************************************************
   -->

  <property name="cvs.tronc" value="TRONC"/>

  <property name="root" value="${basedir}"/>
  <property name="livraison.dir" value="${root}/livraison"/>
  <property name="ressources.dir" value="${root}/ressources"/>
  <property name="lib.dir" value="${root}/lib"/>
  <property name="build.dir" value="${root}/classes"/>

  <property name="tmp.dir" value="${root}/tmp"/>

  <property name="cvs.module.source" value="HermesArchi"/>

  <property name="cvs.dir" value="${tmp.dir}/checkout"/>
  <property name="jar.dir" value="${cvs.dir}/${cvs.module.source}/lib"/>
  <property name="jar1.5.dir" value="${cvs.dir}/${cvs.module.source}/lib1.5"/>
  <property name="source.dir" value="${cvs.dir}/${cvs.module.source}/src"/>
  <property name="properties.dir" value="${cvs.dir}/${cvs.module.source}/properties"/>
  <property name="map4j.dir" value="${cvs.dir}/${cvs.module.source}/map4j"/>
  <property name="mapping.dir" value="${cvs.dir}/${cvs.module.source}/mapping"/>
  <property name="web.dir" value="${cvs.dir}/${cvs.module.source}/tomcat/hermes"/>
  <property name="sql.dir" value="${cvs.dir}/${cvs.module.source}/sql"/>

  <!-- propriétés pour le déroulement des étapes du script -->
  <property name="etapeAutorisee" value="autorisee"/>
  <property name="etapeNonAutorisee" value="nonAutorisee"/>
  <property name="oui" value="Y"/>


  <!-- initialisation -->
  <target name="init" depends="">

    <fail message="la propriété cvs.tag est obligatoire.">
      <condition>
        <not><isset property="cvs.tag"/></not>
      </condition>
    </fail>
    <property name="tag.dir" value="${tmp.dir}/${cvs.tag}"/>

    <!-- Indentifiant de l'exéction -->
    <buildnumber file="${root}/buildTagger.number"/>
    <tstamp>
      <format property="TODAY_UK" pattern="d-MMMM-yyyy hh:mm:ss" locale="en"/>
    </tstamp>

    <!-- creation du répertoire et du fichier de log général -->
    <property name="log.dir" value="${tag.dir}/${build.number} - tagger ${cvs.tag}"/>
    <property name="log.file" value="${log.dir}/taggerArchiDEV.log"/>
    <mkdir dir="${log.dir}"/>

    <echo file="${log.file}" append="true">
      *********************************************************************
      Lancement du script de labellisation de la couche Architecture de Hermes
      *********************************************************************
    </echo>


    <!-- connexion à CVS -->
    <if>
      <equals arg1="${cvs.login}" arg2="$${cvs.login}"/>
      <then>
        <property name="cvs.login" value="adminARCHI"/>
      </then>
    </if>
    <if>
      <equals arg1="${cvs.server}" arg2="$${cvs.server}"/>
      <then>
        <property name="cvs.server" value="hermescvs"/>
      </then>
    </if>
    <if>
      <equals arg1="${cvs.repo}" arg2="$${cvs.repo}"/>
      <then>
        <property name="cvs.repo" value="/DEV"/>
      </then>
    </if>
    <property name="cvs.root" value=":pserver:${cvs.login}@${cvs.server}:${cvs.repo}"/>

    <echo file="${log.file}" append="true">
      Chaine de connexion à CVS : ${cvs.root}
      Module : ${cvs.module.source}
      Branche : ${cvs.branche}
      Tag : ${cvs.tag}
    </echo>
    <echo>
      Chaine de connexion à CVS : ${cvs.root}
      Module : ${cvs.module.source}
      Branche : ${cvs.branche}
      Tag : ${cvs.tag}
    </echo>
    <input message="OK pour tagger? (Y/N)"
           addproperty="tagger.ok"/>
    <fail>
      <condition>
        <equals arg1="${tagger.ok}" arg2="N" casesensitive="false"/>
      </condition>
    </fail>

    <!--Etapes du scripts. A executer dans l'ordre -->
    <echo file="${log.file}" append="true">
      Etape de démarrage du script : ${etape}
    </echo>
    <switch value="${etape}">
      <case value="2">
        <property name="etape1" value="${etapeNonAutorisee}"/>
      </case>
      <case value="3">
        <property name="etape1" value="${etapeNonAutorisee}"/>
        <property name="etape2" value="${etapeNonAutorisee}"/>
      </case>
      <default>
        <echo file="${log.file}" append="true">
          => Cas par défaut. Toutes les étapes du script seront exécutées
        </echo>
      </default>
    </switch>
    <!--
        les property qui n'auraient pas été valuées précédemment le sont à présent.
        La valeur mise fait en sorte que l'étape est autorisée.
      -->
    <property name="etape1" value="${etapeAutorisee}"/>
    <property name="etape2" value="${etapeAutorisee}"/>
    <property name="etape3" value="${etapeAutorisee}"/>

  </target>


  <!--
   *********************************************************************
   ETAPE 1 : checkout CVS
   *********************************************************************
   -->
  <target name="getFromCVS" depends="init">
    <echo file="${log.file}" append="true">
      *********************************************************************
      ETAPE 1 : Checkout de ${cvs.module.source}
      *********************************************************************
    </echo>
    <if>
      <equals arg1="${etape1}" arg2="${etapeAutorisee}"/>
      <then>
        <delete dir="${cvs.dir}"/>
        <mkdir dir="${cvs.dir}"/>
        <if>
          <equals arg1="${cvs.branche}" arg2="${cvs.tronc}"/>
          <then>
            <cvs cvsRoot="${cvs.root}" package="${cvs.module.source}" dest="${cvs.dir}" command="checkout"/>
          </then>
          <else>
            <cvs cvsRoot="${cvs.root}" package="${cvs.module.source}" dest="${cvs.dir}" command="checkout"
                 tag="${cvs.branche}"/>
          </else>
        </if>
        <echo file="${log.file}" append="true">
          OK
        </echo>
      </then>
      <else>
        <echo file="${log.file}" append="true">
          le checkout n'a pas été demandé
        </echo>
      </else>
    </if>
  </target>


  <!--
   *********************************************************************
   ETAPE 2 : TAG
    *********************************************************************
   -->
  <target name="tag" depends="getFromCVS">
    <echo file="${log.file}" append="true">
      *********************************************************************
      ETAPE 2 : TAG
      *********************************************************************
    </echo>
    <if>
      <equals arg1="${etape2}" arg2="${etapeAutorisee}"/>
      <then>
        <!-- les jar du framework (standard et 1.5)-->
        <cvs cvsRoot="${cvs.root}" dest="${jar.dir}" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${jar1.5.dir}" command="tag ${cvs.tag}"/>

        <!-- les classes java -->
        <cvs cvsRoot="${cvs.root}" dest="${source.dir}\com\hermes\arc\commun" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${source.dir}\com\hermes\arc\habilitation" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${source.dir}\com\hermes\arc\edition" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${source.dir}\com\hermes\arc\batch" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${source.dir}\com\hermes\arc\type" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${source.dir}\com\hermes\arc\requeteur" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${source.dir}\com\hermes\arc\annuaire" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${source.dir}\com\hermes\arc\ldap" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${source.dir}\com\hermes\arc\critere" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${source.dir}\com\hermes\arc\parametrage" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${source.dir}\com\hermes\arc\functionalunit" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${source.dir}\com\hermes\arc\modeleobjetmetier" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${source.dir}\com\hermes\arc\executiondifferee" command="tag ${cvs.tag}"/>

        <!-- les properties -->
        <cvs cvsRoot="${cvs.root}" dest="${properties.dir}" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${source.dir}\com\imrglobal" command="tag ${cvs.tag}"/>

        <!-- les sources web -->
        <cvs cvsRoot="${cvs.root}" dest="${web.dir}\jsp\arc\commun" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${web.dir}\jsp\arc\habilitation" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${web.dir}\jsp\arc\edition" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${web.dir}\jsp\arc\batch" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${web.dir}\jsp\arc\type" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${web.dir}\jsp\arc\requeteur" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${web.dir}\jsp\arc\parametrage" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${web.dir}\jsp\arc\functionalunit" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${web.dir}\jsp\arc\modeleobjetmetier" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${web.dir}\jsp\arc\executiondifferee" command="tag ${cvs.tag}"/>

        <!-- le web.xml et les tlds -->
        <cvs cvsRoot="${cvs.root}" dest="${web.dir}\WEB-INF" command="tag ${cvs.tag}"/>

        <!-- map4j -->
        <cvs cvsRoot="${cvs.root}" dest="${map4j.dir}" command="tag ${cvs.tag}"/>

        <!-- sql -->
        <cvs cvsRoot="${cvs.root}" dest="${sql.dir}" command="tag ${cvs.tag}"/>

        <!-- les mapping classes java -->
        <cvs cvsRoot="${cvs.root}" dest="${mapping.dir}\com\hermes\arc\commun" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${mapping.dir}\com\hermes\arc\habilitation" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${mapping.dir}\com\hermes\arc\edition" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${mapping.dir}\com\hermes\arc\requeteur" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${mapping.dir}\com\hermes\arc\critere" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${mapping.dir}\com\hermes\arc\parametrage" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${mapping.dir}\com\hermes\arc\functionalunit" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${mapping.dir}\com\hermes\arc\modeleobjetmetier" command="tag ${cvs.tag}"/>
        <cvs cvsRoot="${cvs.root}" dest="${mapping.dir}\com\hermes\arc\executiondifferee" command="tag ${cvs.tag}"/>
        
        <!-- les fichiers pom -->
				<cvs cvsRoot="${cvs.root}" dest="${source.dir}" command="tag ${cvs.tag} pom.xml"/>
				<cvs cvsRoot="${cvs.root}" dest="${cvs.dir}/${cvs.module.source}" command="tag ${cvs.tag} hermesArchi-parent.pom"/>
      	<cvs cvsRoot="${cvs.root}" dest="${cvs.dir}/${cvs.module.source}" command="tag ${cvs.tag} pom.xml"/>

        <echo file="${log.file}" append="true">
          OK
        </echo>
      </then>
      <else>
        <echo file="${log.file}" append="true">
          la labelisation n'a pas été demandée
        </echo>
      </else>
    </if>
  </target>

  <!--
   *********************************************************************
   ETAPE 3 : UNTAG
      Certaines ressources ne doivent pas être taggées car elles ne
      sont présentes dans l'archi que pour des raisons de compilation.
      Les véritables versions de ces fichiers se trouvent directement
      dans la projet fonctionnel
   *********************************************************************
   -->
  <target name="untag" depends="tag">
    <echo file="${log.file}" append="true">
      *********************************************************************
      ETAPE 3 : UNTAG
      *********************************************************************
    </echo>
    <if>
      <equals arg1="${etape3}" arg2="${etapeAutorisee}"/>
      <then>
        <!-- les sql -->
        <cvs cvsRoot="${cvs.root}" dest="${sql.dir}\data" command="tag -d ${cvs.tag} Habilitations.sql"/>
        <!--<cvs cvsRoot="${cvs.root}" dest="${sql.dir}\ddl\arc\commun" command="tag -d ${cvs.tag} GenerateurReferenceTable.ddl"/>-->

        <!-- fichier de paramétrage xml -->
        <cvs cvsRoot="${cvs.root}" dest="${source.dir}" command="tag -d ${cvs.tag} uem.xml"/>
        <cvs cvsRoot="${cvs.root}" dest="${source.dir}" command="tag -d ${cvs.tag} menuArchi.xml"/>
        <cvs cvsRoot="${cvs.root}" dest="${source.dir}" command="tag -d ${cvs.tag} installation.xml"/>

        <!-- properties des batchs -->
        <cvs cvsRoot="${cvs.root}" dest="${properties.dir}" command="tag -d ${cvs.tag} batch.properties"/>
        <!-- properties hermes (en 7.0) -->
        <cvs cvsRoot="${cvs.root}" dest="${properties.dir}" command="tag -d ${cvs.tag} Hermes.properties"/>
        <cvs cvsRoot="${cvs.root}" dest="${properties.dir}" command="tag -d ${cvs.tag} menuArchi_fr.properties"/>

        <!-- classe pour les listes d'enumType persistents -->
        <!--<cvs cvsRoot="${cvs.root}" dest="${source.dir}\com\hermes\arc\commun\type" command="tag -d ${cvs.tag} HermesEnumTypeList"/>-->

        <!-- EntityProcess des requete -->
        <cvs cvsRoot="${cvs.root}" dest="${source.dir}\com\hermes\arc\requeteur\businessprocess"
             command="tag -d ${cvs.tag} RequeteEntityProcess.java"/>

        <!-- properties pour les code d'edition
          (on tag la classe pour compiler mais elle ne sera pas livré dans le jar)
          -->
        <cvs cvsRoot="${cvs.root}" dest="${source.dir}\com\hermes\arc\edition\type"
             command="tag -d ${cvs.tag} ECodeEdition.properties"/>

        <!-- properties des enumType persistents, framework, paramétrage des éditions -->
        <cvs cvsRoot="${cvs.root}" dest="${properties.dir}"
             command="tag -d ${cvs.tag} PersistentEnumTypeCode.properties"/>
        <cvs cvsRoot="${cvs.root}" dest="${properties.dir}"
             command="tag -d ${cvs.tag} PersistentEnumType_fr.properties"/>

        <!-- le framework.properties est taggés mais il ne sera pas livré
          cf. script livrerArchi.xml
          <cvs cvsRoot="${cvs.root}" dest="${properties.dir}" command="tag -d ${cvs.tag} framework.properties" />
          -->
        <cvs cvsRoot="${cvs.root}" dest="${properties.dir}" command="tag -d ${cvs.tag} editionCode_fr.properties"/>

        <!-- taglibs applicatifs -->
        <cvs cvsRoot="${cvs.root}" dest="${web.dir}\WEB-INF\tlds" command="tag -d ${cvs.tag} HermesAppTags.tld"/>

        <!-- page(s) gérée(s) au niveau de l'applicatif	-->
        <cvs cvsRoot="${cvs.root}" dest="${web.dir}\jsp\arc/commun"
             command="tag -d ${cvs.tag} accueilUEM.jsp"/>

        <echo file="${log.file}" append="true">
          OK
        </echo>
      </then>
      <else>
        <echo file="${log.file}" append="true">
          la suppression du label n'a pas été demandée
        </echo>
      </else>
    </if>
  </target>

  <target name="make">
    <antcall target="untag"/>
  </target>
</project>
