<?xml version="1.0" encoding="ISO-8859-1" ?>
<project name="assemblageJSP" default="make" basedir=".">

	<!-- Ajout d'un package pour utiliser le task IF -->
	<taskdef resource="net/sf/antcontrib/antlib.xml" />

	<!--
	*********************************************************************
		Ce script permet de compiler les fichiers JSP en fonction du serveur d'application (par appel au script compilationJSP.xml).
		Les fichiers JSP et les fichiers JSP compilés (.class) sont ensuite zippés dans un seul et même fichier.
		
		Ce script attend en paramètre :

		=> OBLIGATOIRES
			* nomLivrableFormate	: Nom du livrable final sans l'extension.		
	*********************************************************************
	-->
		
	<!--
	*********************************************************************
	Initialisations
	*********************************************************************
	-->
	<target name="init" depends="">
		<!-- composants.properties -->
		<property name="composants.properties" value="composants.properties" />
		<available file="${composants.properties}" property="composants.properties.present" />
		<if>
			<equals arg1="${composants.properties.present}" arg2="true" />
			<then>
				<echo message="Utilisation du fichier ${composants.properties}" />

				<loadproperties srcFile="${composants.properties}" />
			</then>
			<else>
				<echo message="Pas de fichier ${composants.properties} propriétés dans ${basedir}" />
			</else>
		</if>

		<!-- livrable.properties -->
		<property name="livrable.properties" value="livrable.properties" />
		<available file="${livrable.properties}" property="livrable.properties.present" />
		<if>
			<equals arg1="${livrable.properties.present}" arg2="true" />
			<then>
				<echo message="Utilisation du fichier ${livrable.properties}" />

				<loadproperties srcFile="${livrable.properties}" />
			</then>
			<else>
				<echo message="Pas de fichier ${livrable.properties} propriétés dans ${basedir}" />
			</else>
		</if>
		
		<!-- Property utile pour récupérer les varaibles d'environnements -->
		<property environment="env" />
		
		<!-- on recupère les fichiers dont le script à besoin -->
		<copy file="${env.MODE_TRAITEMENT_HOME}/Assemblage/compilationJSP.xml" todir="." />
		<copy file="${env.MODE_TRAITEMENT_HOME}/TraitementUnitaire/zip.xml" todir="." />
		<copy file="${env.MODE_TRAITEMENT_HOME}/Assemblage/getSrcFromCVS.xml" todir="." />
		<copy file="${env.MODE_TRAITEMENT_HOME}/TraitementUnitaire/traitementLivrablesUnitairesInclus.xml" todir="${basedir}" />

		<!-- Verification des paramètres obligatoires -->
		<if>
			<or>
				<equals arg1="${nomLivrableFormate}" arg2="$${nomLivrableFormate}" />
			</or>
			<then>
				<fail message="Assemblage JSP : il manque un ou plusieurs parametres obligatoires"/>
			</then>
		</if>
		
		<property name="temp.dir" value="tmp" />

		<!-- Date/heure de l'exécution -->
		<tstamp>
			<format property="TODAY_FR" pattern="d-MMMM-yyyy hh:mm:ss" locale="fr" />
		</tstamp>

		<!-- Le répertoire de log et le fichier log du script (spécifique à chaque exécution pour garder un historique) -->
		<property name="log.dir" value="log" />
		<property name="log.file" value="${log.dir}/assemblageJSP.log" />
		
		<!-- creation du répertoire et du fichier de log général -->
		<mkdir dir="${log.dir}" />

		<echo file="${log.file}" append="true">
		*********************************************************************
		Lancement du script d'assemblage JSP
		*********************************************************************
		</echo>

		<!--
		*********************************************************************
		le résultat du script se trouve dans le répertoire ${basedir}.
		Il s'agit de : un jar
		*******************************************************************
		-->

		<!-- les ressources particulières -->
		<property name="build.compilation.dir" value="classes" />
		<property name="sourceCheckout.dir" value="checkout"/>
		<property name="libProjet.dir" value="lib"/>

		<echo file="${log.file}" append="true">
		Parametres de lancement :
			context = ${nomLivrableFormate}
			application = ${codeApplication}
			sourceCheckout.dir = ${sourceCheckout.dir}
			libProjet.dir = ${libProjet.dir}
		</echo>
	</target>

	<!--
	*********************************************************************
	Récupération des sources dans ${sourceCheckout.dir}
	*********************************************************************
	-->
	<target name="recuperationSource" depends="init">
		<echo file="${log.file}" append="true">
		*********************************************************************
		Récupération des sources.
		*********************************************************************
			Les sources sont récupérées dans le répertoire ${sourceCheckout.dir}
		</echo>
		
		<ant antfile="getSrcFromCVS.xml" inheritall="true">
			<property name="checkoutDir" value="${sourceCheckout.dir}"/>
		</ant>
	</target>

	<!--
	*********************************************************************
	Récupération des livrables unitaires éventuels pour la compilation dans basedir
	*********************************************************************
	-->
	<target name="recuperationLivrablesUnitaires" depends="recuperationSource">
		<echo file="${log.file}" append="true">
		*********************************************************************
		Récupération des livrables unitaires éventuels pour la compilation dans ${libProjet.dir}
		*********************************************************************
			Les livrables unitaires sont récupérés
		</echo>
	<!-- récupération des livrables unitaires -->
  	<available file="livrablesUnitairesInclusion.properties" property="livrablesUnitairesInclusion.properties.present" />
	<if>
		<equals arg1="${livrablesUnitairesInclusion.properties.present}" arg2="true" />
		<then>
			<!-- On charge le fichier livrablesUnitairesInclusion.properties pour acceder aux données qu'il contient -->
			<loadproperties srcFile="livrablesUnitairesInclusion.properties" />
			<ant antfile="traitementLivrablesUnitairesInclus.xml" inheritall="true" >
				<property name="livrablesUnitairesInclusion.properties" value="livrablesUnitairesInclusion.properties" />
			  	<property name="livrablesUnitaires.dir" value="${libProjet.dir}" />
				<property name="log.dir" value="${log.dir}"/>
				<property name="log.file" value="${log.file}"/>
			</ant>
		</then>
	</if>
	</target>

	<!--
	*********************************************************************
	Compilation des sources jsp vers ${build.compilation.dir}
	*********************************************************************
	-->
	<target name="compilation" depends="recuperationLivrablesUnitaires">
		<!-- test si la compilation a été demandée -->
		<if>
			<equals arg1="${compilJSP}" arg2="Y"/>
		<then>
			<ant antfile="compilationJSP.xml" inheritall="true">
				<property name="build.dir" value="${build.compilation.dir}"/>
				<property name="sourceACompiler.dir" value="${sourceCheckout.dir}"/>
				<property name="librairiesCompilationProjet.dir" value="${libProjet.dir}"/>
			</ant>
			<echo file="${log.file}" append="true">
		*********************************************************************
		Compilation des sources JSP vers ${build.compilation.dir}
		*********************************************************************
			Le résultat de la compilation se trouve dans le fichier compilJSP.log
			</echo>
		</then>
		<else>
			<mkdir dir="${build.compilation.dir}"/>
			<copy todir="${build.compilation.dir}/jsp">
				<fileset dir="${sourceCheckout.dir}/${moduleCVSDir}/${sourceDir}" includes="${includes}" />
			</copy>
			<echo file="${log.file}" append="true">
		*********************************************************************
		Compilation des sources JSP vers ${build.compilation.dir}
		*********************************************************************
			Non demandée
			</echo>			
		</else>
		</if>
	</target>

	<!--
	*************************************************************************
	Création du ZIP contenant les fichiers JSP et les fichiers JSP commilés
	*************************************************************************
	-->
	<target name="makeZipJSP" depends="compilation">
		<echo file="${log.file}" append="true">
		*********************************************************************
		Création du ZIP
		*********************************************************************
		</echo>
		
		<ant antfile="zip.xml" inheritall="true">
			<property name="sourceFichiersDir" value="${build.compilation.dir}" />
			<property name="zip.name" value="${nomLivrableFormate}.zip" />
			<property name="includes" value="jsp/**/*,WEB-INF/classes/**/*" />
		</ant>
		
		<echo file="${log.file}" append="true">
		OK
		</echo>
	</target>

	<target name="make">
		<antcall target="makeZipJSP" />
	</target>
</project>
