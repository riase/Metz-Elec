<?xml version="1.0" encoding="ISO-8859-1" ?>
<project name="getSrcFromGIT" default="make" basedir="../.">

	<property name="git.tasks.macro" location="../macros/git-tasks.xml" />
	<import file="${git.tasks.macro}" />
		
	<!-- Ajout d'un package pour utiliser le task unset -->
	<taskdef name="unset" classname="ise.antelope.tasks.Unset" />
	<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

  <!-- *********************************************************************
  Ce script permet de récupérer des sources archivés sous GIT

  Avant de lancer le script fixer les paramètres d'environnement.

		set JAVA_HOME=d:\Programs\JBuilder9\jdk1.4
		set ANT_HOME=D:\Programs\ant\apache-ant-1.5.3-1
		set GITHOME=C:\msysgit\msysgit
		
		set PATH=%ANT_HOME%\bin;%JAVA_HOME%\bin;%GITHOME%


  Ce script attend en paramètre :

  OBLIGATOIRES
	GIT.module : nom COMPLET du module GIT à récupérer contenant les livraisons

  	GIT.tag : version du module à récupérer (LIV_2_1_14 par ex).

  FACULTATIFS
  	ExecDir						: Répertoire absolu d'exécution
  	GITTempDir					: Répertoire cible de l'extraction des sources GIT
	GIT.login					: login pour se connecter à GIT. Par défaut adminDEV
	GIT.server				: serveur hébergeant la base GIT. Par défaut hermesGIT
	GIT.repo					: repository où sont les sources. Par défaut /DEV
	Ces trois paramètres peuvent être remplacé par un paramètre global (GIT.root=:pserver:${GIT.login}@${GIT.server}:${GIT.repo})

	La chaîne de lancement est donc (par exemple)

	ant -f getSrcFromGIT.xml -DGIT.module=Developpement_dev\Hermes\src -DGIT.tag=LIV_2_1_14

	*********************************************************************
	-->
<target name="getLASTFromGIT">
	<mkdir	dir="${checkout.dir}"/>

	<git-clone-pull repository="${GIT.root}" dest="${checkout.dir}" />
	
	<delete	dir="${checkout.dir}"/>

	<echo file="${log.file}" append="true">
		La dernière version de l'application ${GIT.module} a été récupérée
	</echo>
</target>

<target name="getThisTagFromGIT">
	<property name="curTag" value="${item}"/>
	<mkdir	dir="${checkout.dir}"/>

	<git-clone-pull repository="${GIT.root}/${curTag}" dest="${checkout.dir}" />

	<move todir="${GIT.dir}" overwrite="true">
		<fileset dir="${checkout.dir}" />
	</move>
	<delete	dir="${checkout.dir}"/>

	<echo file="${log.file}" append="true">
		La version ${curTag} de l'application ${GIT.module} a été récupérée
	</echo>
</target>

  <target name="init" depends="">

	<!-- ExecDir -->
	<if>
		<not><isset property="${execDir}"/></not>
	<then>
		<property name="execDir" value="${basedir}"/>
	</then>
	</if>
	<property name="root" value="${execDir}"/>

	<!-- GITProjetDir -->
	<if>
		<not><isset property="${GITProjetDir}"/></not>
	<then>
		<property name="GITProjetDir" value="${root}/tmp/projet"/>
	</then>
	</if>
	<property name="GIT.dir" value="${GITProjetDir}"/>
	<property name="checkout.dir" value="${GITProjetDir}/../checkout"/>

	<if>
		<equals arg1="${GIT.login}" arg2="$${GIT.login}" />
		<then>
			<property name="GIT.login" value="adminDEV"/>
		</then>
	</if>
	<if>
		<equals arg1="${GIT.server}" arg2="$${GIT.server}" />
		<then>
			<property name="GIT.server" value="hermesGIT"/>
		</then>
	</if>
	<if>
		<equals arg1="${GIT.repo}" arg2="$${GIT.repo}" />
		<then>
			<property name="GIT.repo" value="/DEV"/>
		</then>
	</if>
	<property name="GIT.root" value="git://${GIT.server}/${GIT.repo}/${GIT.module}"/>

	<echo file="${log.file}" append="true">
	La chaine de connexion a GIT est : ${GIT.root}
	Les sources GIT proviennent de : ${GIT.module}
	en version :  ${GIT.tag}
	</echo>

  </target>

  <target name="getSrcFromGIT" depends="init">

	<delete	dir="${GIT.dir}"/>
	<mkdir	dir="${GIT.dir}"/>

	<if>
		<equals arg1="${GIT.tag}" arg2="LAST" />
	<then>
		<antcall target="getLASTFromGIT"/>
	</then>
	<else>
		<foreach list="${GIT.tag}" target="getThisTagFromGIT" delimiter="+" param="item" inheritall="true"/>
	</else>
	</if>

  </target>

  <target name="make">
    <antcall target="getSrcFromGIT"/>
  </target>

</project>
