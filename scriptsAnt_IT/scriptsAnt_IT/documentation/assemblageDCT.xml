<?xml version="1.0" encoding="ISO-8859-1" ?>
<project name="integrationDoc" default="make" basedir="../.">

  <!-- ********************************************************************************* -->
  <!--		UTILISE POUR PACKAGER La documentation		                         -->
  <!-- ********************************************************************************* -->

  <!-- Ajout d'un package pour utiliser le task IF -->
  <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

  <!--
  *********************************************************************
    Ce script permet de déployer l'export des DCT
  *********************************************************************
  -->
  <!--*********************************************************************
  	Initialisations
  *************************************************************************
  -->
  <target name="init" depends="">

	<!-- ExecDir -->
	<if>
	<not><isset property="${execDir}"/></not>
	<then>
	<property name="execDir" value="${basedir}"/>
	</then>
	</if>
	<property name="root" value="${execDir}"/>

	<!-- xmlCommunDir -->
	<if>
		<not><isset property="${xmlCommunDir}"/></not>
	<then>
		<property name="xmlCommunDir" value="${basedir}/scripts"/>
	</then>
	</if>
	<property name="script.xml.commun.dir" value="${xmlCommunDir}"/>
  

  <property name="temp.dir" value="${root}/tmpDoc"/>
  <property name="cvs.dir" value="${temp.dir}/projet"/>

	<!-- Indentifiant de l'exéction -->
	<buildnumber file="${root}/build.number"/>
	<tstamp>
		<format property="TODAY_UK" pattern="d-MMMM-yyyy hh:mm:ss" locale="en"/>
	</tstamp>

	<property name="log.dir" value="${temp.dir}/log.${build.number}"/>
  <property name="log.file" value="${log.dir}/integrationDoc.log"/>

  <!-- propriétés pour le déroulement des étapes du script -->
  <property name="etapeAutorisee" value="autorisee"/>
  <property name="etapeNonAutorisee" value="nonAutorisee"/>
  <property name="deploiementAutorise" value="Y"/>
  <property name="deploiementNonAutorise" value="N"/>


	<buildnumber file="${root}/build.number"/>
    	<tstamp>
    		<format property="TODAY_UK" pattern="d-MMMM-yyyy hh:mm:ss" locale="en"/>
    	</tstamp>

    	<!-- creation du répertoire et du fichier de log général -->
  	<delete dir="${log.dir}"/>
    	<mkdir dir="${log.dir}"/>
		<echo file="${log.file}" append="true">
		*********************************************************************
			Lancement du script de recette d'assemblage de la documentation
		*********************************************************************
		</echo>

	<!-- chargement d'un éventuel fichier properties avec les paramètres de lancement-->
	<if>
		<equals arg1="${property.file.dir}" arg2="$${property.file.dir}"/>
	<then>
		<property name="property.file.dir" value="scripts"/>
	</then>
	</if>
	<available file="${root}/${property.file.dir}/${property.file}" property="property.file.present" />
	<if>
		<equals arg1="${property.file.present}" arg2="true" />
		<then>
			<echo file="${log.file}" append="true">
	Utilisation du fichier ${property.file}
			</echo>
			<loadproperties srcFile="${root}/${property.file.dir}/${property.file}"/>
		</then>
		<else>
			<echo file="${log.file}" append="true">
		Pas de fichier de propriétés dans ${root}\${property.file.dir}
			</echo>
		</else>
	</if>

  <property name="source.dir" value="${cvs.module}"/>
  <property name="build.dir" value="${cvs.dir}/${cvs.module}"/>

	<!--
	  *********************************************************************
		le résultat du script se trouve dans le répertoire exported.dir.
		Il s'agit de : un zip

		Seul le fichier zip doit être déployé
	  *******************************************************************
	-->
	<property name="context" value="DCT"/>
	<property name="exported.dir" value="${root}/Documentation"/>

	<!-- les ressources particulières -->
	<property name="Doc_zip" value="${context}.zip"/>

	<!-- Déploiement -->
	<if>
		<not><isset property="${deploy}"/></not>
	<then>
		<property name="deploy" value="${deploiementNonAutorisee}"/>
	</then>
	</if>
	
	<if>
		<not><isset property="${cvs.type}"/></not>
	<then>
		<property name="deploy" value="${deploiementNonAutorisee}"/>
	</then>
	</if>

	<!-- Répertoire de déploiement -->
	<property name="deploy.home" value="P:\projets\efluidint20"/>

  	<!--Etapes du scripts. A executer dans l'ordre -->
	<echo file="${log.file}" append="true">
		Etape de démarrage du script : ${etape}
	</echo>
	<switch value="${etape}">
		<case value="2">
			<property name="etape1" value="${etapeNonAutorisee}" />
		</case>
		<case value="3">
			<property name="etape1" value="${etapeNonAutorisee}"/>
			<property name="etape2" value="${etapeNonAutorisee}"/>
		</case>
		<default>
			<echo file="${log.file}" append="true">
				=> Cas par défaut. Toutes les étapes du script seront exécutées
			</echo>
		</default>
	</switch>
	<!--
		les property qui n'auraient pas été valuées précédemment le sont à présent.
		La valeur mise fait en sorte que l'étape est autorisée.
	-->
	<property name="etape1" value="${etapeAutorisee}"/>
	<property name="etape2" value="${etapeAutorisee}"/>
	<property name="etape3" value="${etapeAutorisee}"/>
  </target>

  <!--
  *********************************************************************
  ETAPE 1

  Création d'une copie locale du module fonctionnel
  On récupère uniquement les sources taggés
  *********************************************************************
	-->
  <target name="getFromCVS" depends="init">
	<echo file="${log.file}" append="true">
		*********************************************************************
 			ETAPE 1 : Récupération du source de CVS
		*********************************************************************
	</echo>
		
	<if>
 		<equals arg1="${etape1}" arg2="${etapeAutorisee}" />
	<then>
		<delete	dir="${cvs.dir}"/>
		<mkdir	dir="${cvs.dir}"/>
		
		<ant antfile="${script.xml.commun.dir}/getSrcFromCVS.xml" inheritall="true">
			<property name="CvsProjetDir" value="${cvs.dir}"/>
		</ant>

	</then>
	<else>
		<echo file="${log.file}" append="true">
			les sources de l'application ${cvs.module} n'ont pas été récupérées
		</echo>
	</else>
	</if>
  </target>


    <!--
  *********************************************************************
  ETAPE 2 : Création des répertoires supplémentaires
  *********************************************************************
  -->
  <target name="create" depends="getFromCVS">
	<echo file="${log.file}" append="true">
		*********************************************************************
			ETAPE 2 :	Création des répertoires supplémentaires.
		*********************************************************************
	</echo>
	<record name="${log.dir}/create.log" action="start" />
	<if>
		<equals arg1="${etape2}" arg2="${etapeAutorisee}" />
	<then>
		<!-- suppression des répertoires -->
		<!--
		<delete	dir="${build.dir}/input"/>
		-->
		
		<!-- création des répertoires safekeep, input et output-->
		<!--
		<mkdir	dir="${build.dir}/safekeep"/>
		-->
		
		<echo file="${log.file}" append="true">
			OK
		</echo>
	</then>
	<else>
		<echo file="${log.file}" append="true">
			le fichier Zip n'a pas été créé
		</echo>
	</else>
	</if>
	<record name="${log.dir}/create.log" action="stop" />
  </target>


    <!--
  *********************************************************************
  ETAPE 3 : Création du zip
  *********************************************************************
  -->
  <target name="makeZip" depends="create">
	<echo file="${log.file}" append="true">
		*********************************************************************
			ETAPE 3 :	Création du zip.
		*********************************************************************
	</echo>
	<record name="${log.dir}/makeZip.log" action="start" />
	<if>
		<equals arg1="${etape3}" arg2="${etapeAutorisee}" />
	<then>
		<!-- constitution du zip des DCT -->
		<delete	dir="${exported.dir}"/>
		<mkdir dir="${exported.dir}"/>

		<zip destfile="${exported.dir}/${Doc_zip}">
			<zipfileset dir="${build.dir}"/>
		</zip>
		<echo file="${log.file}" append="true">
			OK
		</echo>
	</then>
	<else>
		<echo file="${log.file}" append="true">
			le fichier Zip n'a pas été créé
		</echo>
	</else>
	</if>
	<record name="${log.dir}/makeZip.log" action="stop" />
  </target>

  <!--
  *********************************************************************
  Déploiement du Zip
  ********************************************************************
  -->
  <target name="deployZip" depends="makeZip">
	<echo file="${log.file}" append="true">
		*********************************************************************
			Déploiement du Zip
		*********************************************************************
	</echo>
	<if>
		<equals arg1="${deploy}" arg2="${deploiementAutorise}"/>
	<then>
		<copy file="${exported.dir}/${Doc_zip}" todir="${deploy.home}"/>
	</then>
	<else>
		<echo file="${log.file}" append="true">
			Le fichier Zip n'a pas été déployé
		</echo>
	</else>
	</if>
  </target>

  <target name="make">
    <antcall target="makeZip"/>
  </target>
</project>
