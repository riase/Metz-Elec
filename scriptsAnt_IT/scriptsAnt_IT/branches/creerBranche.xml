<?xml version="1.0" encoding="ISO-8859-1" ?>
<project name="creerBranche" default="make" basedir="../.">


	<!-- Ajout d'un package pour utiliser le task IF -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

	<!--
	*********************************************************************
	Ce sript permet de creer une branche de développement à partir d'une
	version taggée du code

	Ce script attend en paramètre :

	OBLIGATOIRES
		cvs.module			: nom complet du module CVS dans lequel on veut créer la branche
		cvs.branche			: nom de la branche à créer.
		cvs.tag					: nom du tag à partir duquel on crée la branche, LAST si dernière version du code 

	FACULTATIFS

		cvs.login				: nom du user pour la connexion à CVS. Par défaut ce paramètre vaut adminDev
		cvs.server			: nom du serveur sur lequel se trouve la base CVS. Par défaut lausanne
		cvs.repo				: nom du repository CVS. Par défaut DEV
		Ces trois paramètres peuvent être remplacé par un paramètre global (cvs.root=:pserver:${cvs.login}@${cvs.server}:${cvs.repo})

	etape 						: etape de démmarrage du script. Pas de valeur par défaut (=> 1)
	property.file			: fichier avec toutes les properties de lancement du script. Prend le dessus sur les paramètres passé par la ligne de commande (sauf le paramètre contexte)
	property.file.dir : répertoire où se trouve property.file. Par défaut, ${root}\scripts

	Avant de lancer le script fixer les paramètres d'environnement.

	La chaîne de lancement est par exemple :

	ant -f creerBranche.xml -Dcvs.module=developpement_dev -Dcvs.tag=LIV_3_0_21 -Dcvs.branche=DEV_3_0
		[ -Dcvs.login=mrabti_s -Dcvs.serveur=lausanne -Dcvs.repo=INT -Detape=2 ]

	*********************************************************************
	-->

	<!-- initialisation -->
	<target name="init" depends="">

		<!-- ExecDir -->
		<if>
			<not><isset property="${execDir}"/></not>
			<then><property name="execDir" value="${basedir}"/></then>
		</if>
		<property name="root" value="${execDir}"/>
		<property name="tmp.dir" value="${root}/tmp"/>
		<property name="parametrage.dir" value="${root}/parametrage"/>
		<property name="cvs.dir" value="${tmp.dir}/cvs"/>

		<!-- propriétés pour le déroulement des étapes du script -->
		<property name="etapeAutorisee" value="autorisee"/>
		<property name="etapeNonAutorisee" value="nonAutorisee"/>
		<property name="oui" value="Y"/>
		<property name="non" value="N"/>

		<!-- Indentifiant de l'exéction -->
		<buildnumber file="${root}/build.number"/>
		<tstamp>
			<format property="TODAY_UK" pattern="d-MMMM-yyyy hh:mm:ss" locale="en"/>
		</tstamp>

		<!-- creation du répertoire et du fichier de log général -->
		<property name="log.dir" value="${tmp.dir}/log.${build.number}"/>
		<property name="log.file" value="${log.dir}/creerBranche.log"/>
		<mkdir dir="${log.dir}"/>

<echo file="${log.file}" append="true">
*********************************************************************
	Lancement du script de creation d'une branche CVS
*********************************************************************
	root : ${root}
	property.file.dir : ${property.file.dir}
	property.file : ${property.file}
</echo>

		<!-- chargement d'un éventuel fichier properties avec les paramètres de lancement-->
		<if>
			<equals arg1="${property.file.dir}" arg2="$${property.file.dir}"/>
		<then>
			<property name="property.file.dir" value="scripts"/>
		</then>
		</if>
		<available file="${parametrage.dir}/${property.file.dir}/${property.file}" property="property.file.present" />
		<if>
			<equals arg1="${property.file.present}" arg2="true" />
			<then>
				<echo file="${log.file}" append="true">
			Utilisation du fichier ${property.file}
				</echo>
				<loadproperties srcFile="${parametrage.dir}/${property.file.dir}/${property.file}"/>
			</then>
			<else>
				<echo file="${log.file}" append="true">
			Pas de fichier de propriétés dans ${parametrage.dir}\${property.file.dir}
				</echo>
			</else>
		</if>

		<!-- Vérification des paramètres obligatoires -->
    <if>
      <equals arg1="${cvs.module}" arg2="$${cvs.module}" />
      <then>
        <input message="Sur quel module voulez-vous creer une branche?" addproperty="cvs.module" validargs="Developpement_dev,Hermes,HermesArchi,ael,efluidEDK,efluidPub,efluidNet,hermesLDAP,hermesStrS,suivefluid,clients,librairies"/>
      </then>
    </if>
    <if>
      <equals arg1="${cvs.tag}" arg2="$${cvs.tag}" />
      <then>
        <input message="Quel tag sert de support à la branche?" addproperty="cvs.tag" />
      </then>
    </if>
    <if>
      <equals arg1="${cvs.branche}" arg2="$${cvs.branche}" />
      <then>
        <input message="Quel est le nom de la branche à créer?" addproperty="cvs.branche" />
      </then>
    </if>
    <if>
			<or>
				<equals arg1="${cvs.module}" arg2="$${cvs.module}" />
				<equals arg1="${cvs.tag}" arg2="$${cvs.tag}" />
				<equals arg1="${cvs.branche}" arg2="$${cvs.branche}" />
			</or>
			<then>
				<echo>
				cvs.module : ${cvs.module}
				cvs.tag : ${cvs.tag}
				cvs.branche : ${cvs.branche}
				</echo>
				<fail message="Il manque un ou plusieurs paramètres obligatoires"/>
			</then>
		</if>

		<!-- connexion à CVS -->
		<if>
			<equals arg1="${cvs.login}" arg2="$${cvs.login}" />
			<then>
				<property name="cvs.login" value="adminDEV"/>
			</then>
		</if>
		<if>
			<equals arg1="${cvs.server}" arg2="$${cvs.server}" />
			<then>
				<property name="cvs.server" value="hermescvs"/>
			</then>
		</if>
		<if>
			<equals arg1="${cvs.repo}" arg2="$${cvs.repo}" />
			<then>
				<property name="cvs.repo" value="/DEV"/>
			</then>
		</if>
		<property name="cvs.root" value=":pserver:${cvs.login}@${cvs.server}:${cvs.repo}"/>
		<echo file="${log.file}" append="true">
			Chaine de connexion à CVS : ${cvs.root}
		</echo>

		<!--Etapes du scripts. A executer dans l'ordre -->
		<echo file="${log.file}" append="true">
			Etape de démarrage du script : ${etape}
		</echo>
		<switch value="${etape}">
			<case value="2">
				<property name="etape1" value="${etapeNonAutorisee}" />
			</case>
			<default>
				<echo file="${log.file}" append="true">
				=> Cas par défaut. Toutes les étapes du script seront exécutées
				</echo>
			</default>
		</switch>
		<!--
			les property qui n'auraient pas été valuées précédemment le sont à présent.
			La valeur mise fait en sorte que l'étape est autorisée.
		-->
		<property name="etape1" value="${etapeAutorisee}"/>
		<property name="etape2" value="${etapeAutorisee}"/>

    <echo>
Vous allez creer la branche ${cvs.branche}
sur le module ${cvs.module}
a partir du tag ${cvs.tag}
    </echo>

    <input message="confirmer la creation de la branche?"  validargs="Y,N"  addproperty="do.confirm"/>
    <condition property="do.abort">
      <equals arg1="N" arg2="${do.confirm}"/>
    </condition>
    <fail if="do.abort">Creation de la branche abandonnee ...</fail>

  </target>

	<!--
	*********************************************************************
	ETAPE 1 : checkout CVS
	*********************************************************************
	-->
	<target name="getFromCVS" depends="init">
		<echo file="${log.file}" append="true">
			*********************************************************************
			ETAPE 1 : Checkout de ${cvs.module} en version ${cvs.tag}
			*********************************************************************
		</echo>
		<if>
			<equals arg1="${etape1}" arg2="${etapeAutorisee}" />
		<then>
			<delete dir="${cvs.dir}"/>
			<mkdir dir="${cvs.dir}"/>
			<if>
				<equals arg1="${cvs.tag}" arg2="LAST" />
			<then>
				<cvs cvsRoot="${cvs.root}" package="${cvs.module}" dest="${cvs.dir}"/>
			</then>
			<else>
				<cvs cvsRoot="${cvs.root}" package="${cvs.module}" dest="${cvs.dir}" tag="${cvs.tag}"/>
			</else>
		</if>
			<echo file="${log.file}" append="true">
				OK
			</echo>
		</then>
		<else>
			<echo file="${log.file}" append="true">
				Le checkout n'a pas été demandé
			</echo>
		</else>
		</if>
	</target>

	<!--
	*********************************************************************
	ETAPE 2 : Création de la branche
	*********************************************************************
	-->
	<target name="branche" depends="getFromCVS">
		<echo file="${log.file}" append="true">
			*********************************************************************
			ETAPE 2 : Création de la branche ${cvs.branche}
			*********************************************************************
		</echo>
		<if>
			<equals arg1="${etape2}" arg2="${etapeAutorisee}" />
		<then>
			<cvs cvsRoot="${cvs.root}" dest="${cvs.dir}" command="tag -b ${cvs.branche}" />

			<echo file="${log.file}" append="true">
			OK
			</echo>
		</then>
		<else>
			<echo file="${log.file}" append="true">
			la création de la branche n'a pas été demandée
			</echo>
		</else>
		</if> 
	</target>

	<target name="make">
		<antcall target="branche"/>
	</target>

</project>
