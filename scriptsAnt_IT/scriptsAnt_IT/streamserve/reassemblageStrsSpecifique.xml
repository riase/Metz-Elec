<?xml version="1.0" encoding="ISO-8859-1" ?>
<project name="integrationStrS" default="make" basedir="../.">

  <!-- ********************************************************************************* -->
  <!--		UTILISE POUR PACKAGER LES SOURCES STREAMSERVE                            -->
  <!-- ********************************************************************************* -->

  <!-- Ajout d'un package pour utiliser le task IF -->
  <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
  
  <!-- Ajout d'un package pour utiliser le task unset -->
  <taskdef name="unset" classname="ise.antelope.tasks.Unset"/>

  <!--
  *********************************************************************
    Ce script permet l'assemblage du module StreamServe
    
    	Ce script attend en paramètres obligatoires :
    		cvs.tag : version du module à récupérer.
		contextes : nom des contextes streamserve à récupérer
		cvs.server : nom du server CVS
		cvs.login : login du compte CVS
		cvs.repo : le repository concerné
		cvs.modules.clients : chemin CVS des modules clients
		lot : numéro du lot concerné

	La chaîne de lancement est donc (par exemple)
		call ant -f assemblageStrS.xml -Dcvs.tag=LIV_7_0_08 -Dproperty.file=streamserve.properties -Dproperty.file.dir=cmd\parametres -DexecDir=%EXEC_DIR% -DxmlCommunDir=%XML_HOME%\commun -DxmlDir=%XML_HOME%\streamserve

  *********************************************************************
  -->
  <!--*********************************************************************
  	Initialisations
  *************************************************************************
  -->
  <target name="init" depends="">

	<!-- ExecDir -->
	<if>
	<not><isset property="${execDir}"/></not>
	<then>
	<property name="execDir" value="${basedir}"/>
	</then>
	</if>
	<property name="root" value="${execDir}"/>
  
	<!-- xmlCommunDir -->
	<if>
		<not><isset property="${xmlCommunDir}"/></not>
	<then>
		<property name="xmlCommunDir" value="${basedir}/scripts"/>
	</then>
	</if>
	<property name="script.xml.commun.dir" value="${xmlCommunDir}"/>

	<property name="temp.dir" value="${root}/tmpStrS"/>
	<property name="cvs.dir" value="${temp.dir}/projet"/>
	<property name="checkout.dir" value="${temp.dir}/checkout"/>

	<!-- Indentifiant de l'exéction -->
	<buildnumber file="${root}/build.number"/>
	<tstamp>
		<format property="TODAY_UK" pattern="d-MMMM-yyyy hh:mm:ss" locale="en"/>
	</tstamp>

	<!-- chargement d'un éventuel fichier properties avec les paramètres de lancement-->
	<if>
		<equals arg1="${property.file.dir}" arg2="$${property.file.dir}"/>
	<then>
		<property name="property.file.dir" value="scripts"/>
	</then>
	</if>
	<available file="${root}/${property.file.dir}/${property.file}" property="property.file.present" />
	<if>
		<equals arg1="${property.file.present}" arg2="true" />
		<then>
			<echo>
	Utilisation du fichier ${property.file}
			</echo>
			<loadproperties srcFile="${root}/${property.file.dir}/${property.file}"/>
		</then>
		<else>
			<echo>
	Pas de fichier de propriétés dans ${root}\${property.file.dir}
			</echo>
		</else>
	</if>

	<property name="log.dir" value="${temp.dir}/log/streamserve.${build.number}"/>
	<property name="log.file" value="${log.dir}/reassemblageStrSSpecifique.log"/>
	
	<!-- creation du répertoire et du fichier de log général -->
	<delete dir="${log.dir}"/>
	<mkdir dir="${log.dir}"/>
	
	<echo file="${log.file}" append="true">
	*********************************************************************
		Lancement du script de réassemblage de StreamServe Spécifique
	*********************************************************************
	</echo>
	
	<!--
	  *********************************************************************
		le résultat du script se trouve dans le répertoire exported.dir.
	  *******************************************************************
	-->
	<!-- les ressources particulières -->
	<property name="exported.dir" value="${root}"/>	
	
	<echo file="${log.file}" append="true">
		*********************************************************************
		Lancement du script de packaging
		*********************************************************************
		Parametres de lancement :
			regie 		= ${regie}
			contextes 	= ${contextes}
			lot 		= ${lot}
	</echo>
	<unset name="log.file" />	
  </target>

  <!--
  *********************************************************************
  Récupération des différents modules listés dans le paramètre contextes
  puis zip des différents modules
  *********************************************************************
	-->
  <target name="makeZip" depends="init">
	<!--Récupération des modules -->
		<for list="${contextes}" delimiter="," param="data">
			<sequential>
				<!-- Nom du contexte -->
				<property name="context" value="streamserve${regie}@{data}${lot}" />
				<propertycopy name="cvs.context" from="context" override="true" />
				
				<!-- paramètre appli.type pour le paramétrage -->
				<property name="appli.type" value="@{data}" />
				
				<!-- création du fichier de log spécifique au contexte -->
				<property name="log.file" value="${log.dir}/reassemblageStrSSpecifique${regie}@{data}${lot}.log"/>
				
				<ant antfile="${script.xml.commun.dir}/../streamserve/reassemblageStrs.xml" inheritall="true" />
				
				<!-- on réinitialise le property context à vide dans le cas où il y a plusieurs fichiers de paramétrage à modifier -->
				<unset name="context" />
				<unset name="appli.type" />
				<unset name="log.file" />
			</sequential>
		</for>
  </target>
  
  <target name="make">
    <antcall target="makeZip"/>
  </target>
</project>
